<feed xmlns="http://www.w3.org/2005/Atom"> <id>/</id><title>Sans泽霖</title><subtitle>这是通过Chirpy主题配置而成的</subtitle> <updated>2022-07-02T15:34:50+00:00</updated> <author> <name>yzw6deboom</name> <uri>/</uri> </author><link rel="self" type="application/atom+xml" href="/feed.xml"/><link rel="alternate" type="text/html" hreflang="zh-CN" href="/"/> <generator uri="https://jekyllrb.com/" version="4.2.2">Jekyll</generator> <rights> © 2022 yzw6deboom </rights> <icon>/assets/img/favicons/favicon.ico</icon> <logo>/assets/img/favicons/favicon-96x96.png</logo> <entry><title>网盘项目——后端登陆(三)</title><link href="/posts/%E7%BD%91%E7%9B%98%E7%99%BB%E9%99%86/" rel="alternate" type="text/html" title="网盘项目——后端登陆(三)" /><published>2022-04-15T00:00:00+00:00</published> <updated>2022-04-15T14:04:22+00:00</updated> <id>/posts/%E7%BD%91%E7%9B%98%E7%99%BB%E9%99%86/</id> <content src="/posts/%E7%BD%91%E7%9B%98%E7%99%BB%E9%99%86/" /> <author> <name>Sans泽霖</name> </author> <category term="项目" /> <summary> 后端登陆API 1.项目主要依赖 spring-boot 2.2.2 mybatis-plus 3.5.1 java-jwt 3.18.2 项目的后端技术栈为：spring springboot maven mybatis-plus mysql 2.配置文件application spring: application: #配置启动服务器 name:Sans-cloud-server datasource: #配置mysql连接服务 driver-class-name: com.mysql.jdbc.Driver url: jdbc:mysql://localhost:3306/cloud username: root password: 123456 server: port: 8080 servlet:... </summary> </entry> <entry><title>网盘项目——前端(二)</title><link href="/posts/%E7%BD%91%E7%9B%98%E5%89%8D%E7%AB%AF02/" rel="alternate" type="text/html" title="网盘项目——前端(二)" /><published>2022-04-12T00:00:00+00:00</published> <updated>2022-04-12T00:00:00+00:00</updated> <id>/posts/%E7%BD%91%E7%9B%98%E5%89%8D%E7%AB%AF02/</id> <content src="/posts/%E7%BD%91%E7%9B%98%E5%89%8D%E7%AB%AF02/" /> <author> <name>Sans泽霖</name> </author> <category term="项目" /> <summary> 前端登陆模块的实现 1.安装相关依赖 "vuex": "^4.0.2" "js-cookie": "^3.0.1" "axios": "^0.26.1", vuex：管理全局变量，在登陆模块中的作用是调用登陆请求 js-cookie：轻量级cookie管理组件 axios：创建http请求 2.登陆页面的设计 2.1 HTML页面设计 2.2 登陆事件流程图 3.登陆页面的HTML代码 &amp;lt;div class="login-container"&amp;gt; &amp;lt;el-card&amp;gt; &amp;lt;el-form ref="loginForm" :model="loginForm" :rules="loginRules" class="login-form" auto- complete... </summary> </entry> <entry><title>Vue3.x 引入自定义svg文件的流程</title><link href="/posts/svg%E6%96%87%E4%BB%B6%E7%9A%84%E5%BC%95%E5%85%A5/" rel="alternate" type="text/html" title="Vue3.x 引入自定义svg文件的流程" /><published>2022-04-08T00:00:00+00:00</published> <updated>2022-04-08T00:00:00+00:00</updated> <id>/posts/svg%E6%96%87%E4%BB%B6%E7%9A%84%E5%BC%95%E5%85%A5/</id> <content src="/posts/svg%E6%96%87%E4%BB%B6%E7%9A%84%E5%BC%95%E5%85%A5/" /> <author> <name>Sans泽霖</name> </author> <category term="随笔" /> <summary> Vue3.x 引入自定义svg文件的流程 版本相关 "vue": "^3.2.13" "vue-router": "^4.0.14" "@vue/cli-service": "~5.0.0" "svg-sprite-loader": "^6.0.11" 引入 svg-sprite-loader 依赖 第一步要引入相关依赖——svg-sprite-loader npm i -D svg-sprite-loader yarn add -D svg-sprite-loader 创建svg相关文件 在根目录创建svg的相关文件和文件夹。 src—&amp;gt;icons—&amp;gt;svg文件夹：放置网站所需要的svg文件 ​ icons—&amp;gt;index.js文件：编写svg文件控制脚本 src—&amp;gt; components—&amp;gt;SvgIcon—&amp;gt... </summary> </entry> <entry><title>网盘项目——前端(一)</title><link href="/posts/%E7%BD%91%E7%9B%98%E5%89%8D%E7%AB%AF01/" rel="alternate" type="text/html" title="网盘项目——前端(一)" /><published>2022-04-05T00:00:00+00:00</published> <updated>2022-04-05T00:00:00+00:00</updated> <id>/posts/%E7%BD%91%E7%9B%98%E5%89%8D%E7%AB%AF01/</id> <content src="/posts/%E7%BD%91%E7%9B%98%E5%89%8D%E7%AB%AF01/" /> <author> <name>Sans泽霖</name> </author> <category term="项目" /> <summary> VueCli项目的启动与Login页面的路由挂载 [TOC] 项目依赖 "vue": "^3.2.13" "vue-router": "^4.0.14" "element-plus": "^2.1.8" "@vue/cli-service": "~5.0.0" "sass-loader": "^12.6.0" 1.vue项目的启动 这个网盘项目是在WebStrom上面直接新建Vue.js项目，因此相比于在命令行使用npm缺少了版本选择等一些细节，但是这些都可以在项目终端中进行修改 创建完项目之后进行依赖注入（npm/yarn）就可以正式开始进行项目设计了 2.项目设计 App.vue：作为网页的主入口，承担对子页面的路由分发功能。启动项目后进入页面默认Path：’/’ login：登陆页面，经过路由挂载，由路由渲染页面。Path：’/login’ 3.修... </summary> </entry> <entry><title>mybatis/mybatis-plus与mysql的字段驼峰命名冲突的问题</title><link href="/posts/mybatis/" rel="alternate" type="text/html" title="mybatis/mybatis-plus与mysql的字段驼峰命名冲突的问题" /><published>2022-04-01T00:00:00+00:00</published> <updated>2022-04-01T14:38:18+00:00</updated> <id>/posts/mybatis/</id> <content src="/posts/mybatis/" /> <author> <name>Sans泽霖</name> </author> <category term="随笔" /> <summary> 驼峰命名冲突问题 在引入Mybatis/Mybatis-plus之后，如果没有对mysql字段命名方式进行设置，那么就会出现命名冲突的情况。 例如：在mysql中创建的字段名是uploadTime，而相应的model层内Mybatis设置的是upload_time。这样的话在运行代码时就会发生在数据库中找不到目标字段的错误。 解决方法：在application.yml文件中添加Mybatis的驼峰命名转换字段 mybatis/mybatis-plus: configuration: map-underscore-to-camel-case: false </summary> </entry> </feed>
